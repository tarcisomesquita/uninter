Aula 1

Programa: sequência de instruções que pode ser descrita por um algoritmo.
Algoritmo: sequência de passos (ações) que visa atingir um objetivo bem definido.

Algoritmo -> Lógica de programação + Estrutura de dados -> Linguagem de programação

Programador é quem conhece profundamente os detalhes da linguagem.

Software de sistema
	sistemas operacionais
	sistemas tradutores
Software utilitários: antivírus, compactadores, formatadores, emuladores
Software aplicativo: navegadores, editores de texto e imagens, planilhas, SGBD.

Vírus não é um aplicativo.

Sistema operacional:
	Facilitar o uso dos recursos do computador
	Gerenciar os recursos do computador
	Controlar a execução de programas

Tradutores: compiladores (arquivo inteiro) e interpretadores (linha por linha).

Ciclo de vida ou Modelo de processo:
	Definição
		Requisitos (reuniões e documentação)
		Definição do problema
		Análise do sistema (estruturado, orientado a objetos)
	Desenvolvimento
		Definição de módulos
		Algoritmo
		Codificação
		Testes
	Manutenção (ajustes)
		Manual
		Modificações (inclusão ou alteração de módulos)
		Treinamento do usuário

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Aula 1 pratica

Hello world em C no replit.com
Média de notas

IDE Dev C++
Média de notas

Comentários: legibilidade. Facilita a manutenção e aumenta a qualidade do software

IDE Visual Studio
scanf_s
_getchar()  <conio.h>

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Aula 2

Perda de tempo por falta de metodologia
Falta de estimativa de quando o software seria entregue

Bug:
	Copia errada de uma formula no papel (falta de teste) ocasionou queda de foguete
	Acelerador que emitia 100 vezes mais radiação (falta de teste e documentação)
	Erro na divisão de float na 4 casa decimal causou o prejuízo (U$ 500 milhões) da troca de processadores

Engenharia de software: abordagem sistemática, disciplinada e quantificável no desenvolvimento, operação e manutenção de software

Objetivo é a qualidade de software

Camadas da Engenharia de Software
	Qualidade: foco ou objetivo
	Processos: metodologias (modelo de processo)
	Métodos: técnica de desenvolvimento (regras)
	Ferramentas: Vision, DryIO

Engenharia de Software foi regulamentada em 2018

Engenheiro de Software não é programador, assim como um engenheiro civil não é um pedreiro.

Engenheiro de Software escolhe os processos, as fases e avalia o desenvolvimento.
Analista: compreensão do problema, levantamento de requisitos e modelagem
Programador: conhecimento IDEs, linguagem, bibliotecas e testes.

Respeitar:
  Confidencialidade
  Competência
  Propriedade intelectual
  Bom uso do computador

Mitos:
  Gerenciamento:
    basta ter um livro com regras
    mais programadores não reduz o tempo: precisa treinar
    tercerizar: requer acompanhamento

  Cliente:
    basta definir objetivos, detalhes podem ser ajustados depois. Precisa requisitos detalhados.
    pode mudar os requistos e o software (afeta os prazos)

  Profissional da área:
    O trabalho termina quando acaba o desenvolvimento (60% a 80% do tempo é com manutenção)
    O produto é o software (tem o modelo, os documentos, etc)
    Documentação é perda de tempo

Atributos da qualidade do software:
	satisfaz os requisitos
	fácil de usar
	confiável (tolere falhas)
	desempenho (rápido)
	fácil de manter

fatores: confiabilidade, eficiência, facilidade de usar, modularidade, legibilidade, usabilidade, extensibilidade, escalabilidade, capacidade de manutenção e reutilização, testabilidade, confiabilidade, segurança e desempenho, dentre outros.

Se não tem tempo para a engenharia de software, terá tempo para refazer o software?

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Aula 2 pratica

Scratch

game dissauro do chrome

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Aula 3

rede de computadores
meios de transmissão
LAN, MAN, WAN
Topologia: barramento, anel, estrela

Protocolos
Aplicação: http, ftp, tls
transporte: tcp, udp
rede: ip
link: ethernet

servidor, cliente
peer to peer (todas as máquinas são clientes e servidores)

Internet
1987 FAPESP
1995 comercial

1980 hipertexto (tim lee)
1989 http
1990 servidor
1993 browser

Domínio

Nuvem
< preocupação com hardware e número de acessos

Modelos de computação em nuvem
IaaS (Infraestrutura como serviço)
	Oferece hardware
	Usuário gerencia o sistema operacional e o servidor
	EC2 da AWS
PaaS (plataforma como serviço)
	Usuário recebe um ambiente de desenvolvimento
	Elastic Beanstalk e RDS da AWS
SaaS (software como serviço)
	Facebook, Drop Box, Office 365

Modelos de implantação
all in cloud
nuvem privada
hibrido

Benefícios da nuvem
Agilidade
Elasticidade
Economia de custos
Implantação

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Aula 3 pratica
Infraestrutura de arquivos num servidor
000webhost.com
usou bootstrap (modelos front end e páginas responsivas)

Domínio, IPv4 e IPv6

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Aula 4

Desenvolvimento web

história da internet

endereço

cliente, servidor

DNS

história html, http

w3schools.com

hello world in html

1) formulário
diferentes tipos de input
GET/POST

2) tabela
caption
tr th
tr td
colspan (quantidade de espaços)

3) tabela com imagens como links


CSS
seletor {propriedade:valor;}
h1 {color:blue; font-size:12px;}

.teste {color:blue;}
<p class=teste>

#t2 {color:blue;}
<p id=t2>

cascata, ordem de prioridade

<link rel=stylesheet href=estilo.css>

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Aula 5

pseudo classe
.imagem:hover {background:#FF0000;} // quando passa o mouse sobre

.alternada {
 list-style: url(); // upper-latin; upper-roman; upper-alpha;
}
.alternada li:nth-child(odd) {background-color:khaki}
.alternada li:hover {fond-weight: bolder}

<ul class="alternada">
<li></li>
</ul>

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

Aula 6

comentário no código fonte: o porquê, não a descrição da ação

notação comum: primeiroNome

<p id="para1">
let paragrafo = document.querySelector("#para1");

paragrafo.addEventListener("click", trocaTexto);

function trocaTexto() {
  paragrafo.style.backgroud = "red";
}
