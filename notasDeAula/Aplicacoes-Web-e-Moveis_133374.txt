https://github.com/N-CPUninter/FUNDAMENTOS-DE-DESENVOLVIMENTO-WEB

programador recebe um protótipo

A01-P01
Sumário

A01-P02
História do link: memex (1945), xanadu (1960)

Tim Bernard Lee, em 1990, desenvolveu o HTML.
Berners-Lee (citado por Chagas, 2014) afirmava: "Gostei da ideia de que uma informação é realmente definida apenas pelo que está relacionada e como está relacionada. Realmente há pouco mais para o significado. A estrutura é tudo".

Cliente-servidor

Front-end, back-end, full-stack

A01-P03
Visual Studio Code
extensões, temas

Live server: permite ver js diretamente no navegador

! para criar estrutura do arquivo
Ctr+S
Ctr+Shift+T > open in browser

A01-P04
HTML
h1-h6, p, html, head, body, title, hr, br, ul, ol, li,

A01-P05
<a href="https://...">
<img src="" alt="acessibilidade" title="mostra" width="">
table, th,tr, td, border

<a href="#l1"> Item 1</a>
<h3 id="l1">Item 1</h3>

A01-P06
form, input type="text|radio|checkbox|select|button|textarea"
<select> melhor para banco de dados
action="file.php" method="GET|POST"
<label for="name">Nome:</label>
id="unico_js" name="para_php"

A07
servidor, domínio, registro.br
https://000webhost.com/
https://decourt.000webhostapp.com/
https://files.000webhost.com/
Nome: database, Usuário: user
id22096866_database, id22096866_user

criou página no github

A08
mesclar células: colspan e rowspan
acessibilidade em tabelas: sumary="descrição", <caption>Descrição</caption>

form, fieldset
input type submit

A02-P01
sumário

A02-P02
conteúdo: html
visual: css

seletores: elemento (p), class (.p), id (#p) e universal (*)

style (interno)

externo
<link rel="stylesheet" href="style.css">

inline (não recomendado)
<p style="">

A02-P03
/* comentário css*/
color, backgroud-color
padding, margin, border, border-radius
text-align

class="classe1 classe2"

A02-P04
width
div

box-sizing: border-box; /* faz caber na tela*/

A02-P05
float: left | rigth | none | inherit

elementos block: main, div, h[1-6], p, pre, ul, ol, li, table, form, ...
block: dois seguidos aparecem um abaixo do outro

elementos inline: a, b, i, span, br, img, input, sup, sub, textarea, code, object, 
inline: dois seguidos aparecem um do lado do outro

A02-P06
usar lista para fazer menu
ul, li { display: inline}
list-style-type: none
text-decoration: none

position: static | relative | absolute | fixed
static: posição normal
relative: posição em relação à posição normal
absolute: posição em relação a posição do elemento anterior

z-index
somente para elementos com atributo position

overflow: scroll;

A09
Fez uma página. Propaganda eletrecista.

<section style="clear: both">

A03-P01
Sumário

A03-P02
árvore do documento
html {head, body}
body {div}
div {header,section, footer}
header {h1..}

<main> não pode ser filho dos elementos <article>, <aside>, <footer>, <header>, ou <nav>.
Autores não devem incluir mais de um elemento main no mesmo documento

Seletores de tag
E F = Elemento F descendente do
elemento E 
E > F = Elemento F filho do elemento E
E + F = Elemento F imediatamente após
E (irmãos) 
E ~ F = Elemento F após elemento E
(irmãos)
E:firstchild = Elemento E primeiro-filho do seu
elemento-pai
E:lastchild

A03-P03
selector:pseudo-class { color:red}

pseudo-class = :link | :visited | :hover ...
manter a ordem
? :hover mudar a cor do fundo para mostrar validação

pseudo-elementos
::after | ::before | ::first-letter | ::first-line | ::maker | ::selection
Usado para fonte, background

maker: item de lista
selection: quando selecionar o texto

A03-P04
Menu vertical
li, a {display: block}

submenu é uma lista dentro de outra
position: absolute; display: none

horizontal
li {float:left}

A03-P05
dimensionamento: px, porcentagem

variáveis
<style>
:root {
  --dourado: #DEB44B;
  --branco: #FFFFFF;
}
body {
  background-color: var(--dourado);
}
</style>

img {
  border-radius: 50%;
  opacity: 0.5;
  display: block; margin: auto; // centraliza
}

A03-P06
transformações 2D
seletor {transform: translateX(x); translate(x,y);}

rotate(angulo); scaleX(n); skewX(a);
matrix(scaleX(), scaleY(), skewX(), skewY(), translateX(), translateY() );

exemplo com javascript mudando style tranformação

transition-dalay
transition-duration
transition-property
transition-timing-function

div {
  width: 100px; height: 100px;
  transition: width 2s;
}
#div1 {transition-timing-function: linear | ease | ease-in | ease-out | ease-in-out}
div:hover {width: 300px}

achei melhor o ease-in-out

A10
explicou o ćódigo de uma página sobre leonardo da vince

display: grid

https://color.adobe.com/create/color-wheel
cor + cor complementar, pois combinam
ideal é usar uma cor mais uma segundária

A04-P01
sumario

A04-P02
Elementos estruturais semânticos
topo (header), menu (nav), conteúdo, banner, footer

<section> é apropriado apenas se o conteúdo do elemento for listado explicitamente na estrutura de tópicos do documento
<article>: uma postagem em um blog ou um comentário. Um independe do outro.
<div> como um elemento de último recurso, quando nenhum outro elemento for adequado.

* {box-sizing: border-box;}

A04-P03
grid
column, row, gaps

.container {
  display: grid;
  grid-template-columns: 100px 50px 80px 200px;
  grid-template-rows: 80px 100px 100px;
  gap: 10px;
}
.box1 {
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 3;
  grid-row-start: 4;
}
<div class="container">

...

A04-P04
Flexbox
organiza em linha OU coluna

display:flex

A04-P05
Media query

@media not|only mediatype and (expressions) {
  css-code;
}

@media screen and (min-width: 480px) {
  body {
    bac...
  }
}

img com tamanho flexível
<picture>
<source media="(max-width: 750px)" srcset="imagem1.png">
<source media="(max-width: 1050px)" srcset="imagem2.png">
<img src="imagem.png">
</picture>


A04-P06
img {
display: block;
margin: 0, auto;
max-width: 100%;
}

.artdirection
acompanhar a orientação do celular

A05-P01
sumário

A05-P02
Javascript
história

visual stidio code
extensão live server

A05-P03
variáveis
let, var

tipos: Boolean, Number, BigInt, String, Undefined, Symbol

str.charAt(6)
str.slice(0,9) // corta 0-9
str.splite(' ')

A05-P04

operadores de atribuição =, +=, -=, *=, /=, %=, **=
operadores relacionais ==, ===, !=, !==, <, <=, >, >=
operadores lógicos &&, ||, !

alert, confirm e prompt

A05-P05
if, switch

A05-P06
for, while, do { } while ()

A06-P01
sumário

A06-P02
objetos, new

função construtora
const carro = {
  marca: '',
  preco: 0
}

const honda = carro;
honda.marca = 'Honda';
honda.preco = 244000;

function Carro() {
  this.marca = '';
  this.preco = 0;
}

const honda = new Carro();

for (varialvel in objeto)

A06-P03
função, return, parametros
let v = (p1, p2) => p1 + p2;

A06-P04
window.closed, window.history, window.open(), window.close(), window.onload()
document

A06-P05
getElementById()
getElementByClassName()
getElementsByTagName()

element.style

A06-P06
eventos

A11
A12
localStorage.setItem("nome", "João");
let nome = localStorage.getItem("nome");

substitui o cookie


https://warthunder.com/
